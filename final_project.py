# -*- coding: utf-8 -*-
"""Final project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T-fSnIiXV720K6PAF1f6OGQNNL0hkTjz
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_squared_error

df = pd.read_csv("airlines_data (1).csv")
df.columns = df.columns.str.strip()
print(df.head())
print(df.tail())
print(df.describe())
print(df.info())
print(df.columns)
print(df.shape)
print(df.isnull().sum())
df = df.dropna()
print(df.shape)
print(df.columns)
print(df.info())

sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (10, 6)

plt.figure()
sns.scatterplot(x="Duration (Hours)", y="Ticket Price (USD)", data=df, hue="Flight Type", alpha=0.6)
plt.title("Scatter Plot: Duration vs Ticket Price")
plt.xlabel("Duration (Hours)")
plt.ylabel("Ticket Price (USD)")
plt.tight_layout()
plt.show()

plt.figure()
sns.histplot(df["Ticket Price (USD)"], bins=30, kde=True, color="mediumseagreen")
plt.title("Histogram: Ticket Price Distribution")
plt.xlabel("Ticket Price (USD)")
plt.ylabel("Number of Flights")
plt.tight_layout()
plt.show()

top_airlines = df["Airline Name"].value_counts().head(10).index
plt.figure()
sns.boxplot(data=df[df["Airline Name"].isin(top_airlines)],
            x="Airline Name", y="Ticket Price (USD)", palette="Set3")
plt.title("Box Plot: Ticket Price by Top 10 Airlines")
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()

plt.figure()
corr_matrix = df[["Duration (Hours)", "Ticket Price (USD)"]].corr()
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm", linewidths=0.5)
plt.title("Heatmap: Correlation Between Duration and Ticket Price")
plt.tight_layout()
plt.show()

avg_price_per_airline = df.groupby("Airline Name")["Ticket Price (USD)"].mean().sort_values()
plt.figure()
plt.plot(avg_price_per_airline.index, avg_price_per_airline.values, marker="o", linestyle='-', color='slateblue')
plt.title("Line Graph: Average Ticket Price per Airline")
plt.xlabel("Airline Name")
plt.ylabel("Average Ticket Price (USD)")
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

plt.figure(figsize=(10, 6))
flight_counts = df["Airline Name"].value_counts()
sns.barplot(x=flight_counts.index, y=flight_counts.values, palette="viridis")
plt.title("Number of Flights by Airline")
plt.xlabel("Airline Name")
plt.ylabel("Number of Flights")
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()

le = LabelEncoder()
df["Airline_Encoded"] = le.fit_transform(df["Airline Name"])
X = df[["Duration (Hours)", "Airline_Encoded"]]
y = df["Ticket Price (USD)"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error (Linear Regression): {mse:.2f}")